# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
name: Build Curity Plugin

on:
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env: 
      IDSVR_LICENSE: ${{secrets.IDSVR_LICENSE}}
    steps:
      - name: Read Idsvr License
        run: echo $IDSVR_LICENSE

      - name: Download code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache the maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build & test with Maven
        run: mvn -B package --file pom.xml

      - name: Copy plugin jars
        run: mkdir staging && cp target/*.jar staging

      - name: Build plugin artifacts zip  
        run: |
          zip --junk-paths plugin-artifacts staging/*

      - name: Upload plugin artifacts
        uses: actions/upload-artifact@v3
        with:
          name: plugin-artifacts.zip
          path: plugin-artifacts.zip

  create_release:
    runs-on: ubuntu-latest
    needs: build_and_test
    permissions: write-all

    steps:
      - name: Download code
        uses: actions/checkout@v3
     
      - name: Conventional changelog action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.18.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        #  skip-version-file: "true"
          skip-tag: "true"
         # output-file: "false"

      - name: Fetch release version from POM file
        run: |
              echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Create git tag
        run: |
               export version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
                git config user.name suren-khatana
                git config user.email surendra.khatana@curity.io
                git tag -a $version -m "$version"
                git push origin $version

      - name: Download plugin artifacts
        uses: actions/download-artifact@v2
        with:
          name: plugin-artifacts.zip          

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} 
            asset_path: ./plugin-artifacts.zip
            asset_name: plugin-artifacts.zip
            asset_content_type: application/zip