# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
name: Build Curity Plugin with Maven

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build & test with Maven
        run: mvn -B package --file pom.xml

      - name: Copy plugin jars
        run: mkdir staging && cp target/*.jar staging

      - name: Upload plugin artifacts
        uses: actions/upload-artifact@v3
        with:
          name: plugin-jars
          path: staging

  changelog:
    runs-on: ubuntu-latest
    needs: build_and_test
    permissions: write-all

    steps:
      # Create a temporary, uniquely named branch to push release info to
      - name: create temporary branch
        uses: peterjgrainger/action-create-branch@v2.3.0
        id: create-branch
        with:
          branch: 'release-from-${{ github.sha }}'
          sha: '${{ github.sha }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # check out the repository afterwards
      - uses: actions/checkout@v3

      # create release info and push it upstream
      - name: conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.7.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # release info is now in main so we can continue as before
      - name: create release with last commit
        uses: actions/create-release@v1
        if: steps.changelog.outputs.skipped == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
